# ----------------------------------------------------------------------------------------------------------------------
# ROBUST INTELLIGENCE TERRAFORM DEPLOYMENT
#
# Pattern 2: Cluster + Application (Cluster)
# This main.tf deploys a bootstrapped EKS cluster for use with the Robust Intelligence application.
#
# Version 2.1
# ----------------------------------------------------------------------------------------------------------------------

# ----------------------------------------------------------------------------------------------------------------------
# PROVIDERS
# ----------------------------------------------------------------------------------------------------------------------
provider "aws" {
  region = ""
}

provider "kubernetes" {
  host                   = data.aws_eks_cluster.cluster.endpoint
  token                  = data.aws_eks_cluster_auth.cluster.token
  cluster_ca_certificate = base64decode(data.aws_eks_cluster.cluster.certificate_authority[0].data)
}

provider "helm" {
  kubernetes {
    host                   = data.aws_eks_cluster.cluster.endpoint
    token                  = data.aws_eks_cluster_auth.cluster.token
    cluster_ca_certificate = base64decode(data.aws_eks_cluster.cluster.certificate_authority[0].data)
  }
}

# ----------------------------------------------------------------------------------------------------------------------
# DATA SOURCES
# ----------------------------------------------------------------------------------------------------------------------
data "aws_eks_cluster" "cluster" {
  name = module.rime_eks_cluster.cluster_name
}

data "aws_eks_cluster_auth" "cluster" {
  name = module.rime_eks_cluster.cluster_name
}

# Example of using route53 for managed DNS (optional)
data "aws_route53_zone" "registered_domain_hosted_zone" {
  name = ""
}

# Example of using AWS Secrets Manager to manage the application secret
# For the cluster, this is needed for items like imagePullSecrets
data "aws_secretsmanager_secret_version" "rime-secrets" {
  secret_id = "rime-${local.infra_name}-secrets"
}

locals {
  # The version of Robust Intelligence that you are deploying
  rime_version = "2.1.X"

  # Generally used as a suffix for various Terraform resources
  infra_name = "acme"

  # The name of the K8s cluster for Robust Intelligence
  cluster_name = "rime-${local.infra_name}"

  # The Helm repository to use for Helm charts
  rime_repository = "https://robustintelligence.github.io/helm"

  # A local directory to store autogenerated Helm values
  helm_values_output_dir = "./rime_cluster_values"

  # The OIDC provider URL of the cluster
  stripped_oidc_provider_url = replace(data.aws_eks_cluster.cluster.identity[0].oidc[0].issuer, "https://", "")

  # Specify a secret string value (by default, comes from AWS Secrets Manager)
  secrets = jsondecode(data.aws_secretsmanager_secret_version.rime-secrets.secret_string)

  tags = { ManagedBy = "Terraform" }
}

# ----------------------------------------------------------------------------------------------------------------------
# SUBMODULES
# ----------------------------------------------------------------------------------------------------------------------
module "rime_eks_cluster" {
  source = "github.com/RobustIntelligence/terraform//rime_eks_cluster?ref=2.1.X"

  cluster_name    = local.cluster_name
  cluster_version = "1.23"

  vpc_id             = ""
  private_subnet_ids = []
  public_subnet_ids  = []

  model_testing_worker_group_instance_types = ["m4.4xlarge"]
  model_testing_worker_group_min_size       = 0
  model_testing_worker_group_desired_size   = 1
  model_testing_worker_group_max_size       = 10

  server_worker_group_min_size     = 5
  server_worker_group_desired_size = 5
  server_worker_group_max_size     = 10

  map_roles = [
    {
      rolearn  = "arn:aws:iam::111111111111:role/<ROLE>"
      username = "ssoAdminuser"
      groups = [
        "system:masters"
      ]
    }
  ]
}

module "rime_kube_system_helm_release" {
  source = "github.com/RobustIntelligence/terraform//rime_kube_system_helm_release?ref=2.1.X"

  install_cluster_autoscaler = true
  install_metrics_server     = true
  install_lb_controller      = true
  enable_cert_manager        = true

  install_external_dns = true
  domains              = [""]

  rime_version                = local.rime_version
  cluster_name                = local.cluster_name
  oidc_provider_url           = local.stripped_oidc_provider_url
  rime_helm_repository        = local.rime_repository
  helm_values_output_dir      = local.helm_values_output_dir
  create_managed_helm_release = true
  resource_name_suffix        = local.infra_name
  docker_credentials          = lookup(local.secrets, "docker-logins", [])
  tags                        = local.tags
}

module "rime_extras_helm_release" {
  source     = "github.com/RobustIntelligence/terraform//rime_extras_helm_release?ref=2.1.X"
  depends_on = [module.rime_eks_cluster]

  install_velero         = true
  velero_backup_schedule = "0 6 * * * "

  install_datadog = true
  datadog_api_key = lookup(local.secrets, "datadog-api-key", "")
  rime_user       = ""

  rime_version                = local.rime_version
  oidc_provider_url           = local.stripped_oidc_provider_url
  rime_repository             = local.rime_repository
  helm_values_output_dir      = local.helm_values_output_dir
  create_managed_helm_release = true
  resource_name_suffix        = local.infra_name
  docker_credentials          = lookup(local.secrets, "docker-logins", [])
  tags                        = local.tags
}
